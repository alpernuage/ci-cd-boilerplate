name: Pipeline-CI
on:
  push:
    branches: [ master ]
jobs:
  ci:
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@2.34.1
        with:
          extensions: ctype, dom, filter, gd, iconv, intl, json, mbstring, pdo, pdo_mysql, xml

      - name: Cache multiple paths
        uses: actions/cache@v4.2.3
        with:
          path: |
            vendor
          key: ${{ runner.os }}-${{ hashFiles('composer.lock') }}

      - name: "Composer install"
        run: composer install --no-interaction --no-progress

      # Install Symfony CLI
      - name: Symfony CLI
        run: |
          curl -sS https://get.symfony.com/cli/installer | bash
          mv /home/runner/.symfony5/bin/symfony /usr/local/bin/symfony

      # Check vulnerabilities
      - name: Symfony Check Vulnerabilities
        run: symfony check:security

      # PHP CS FIXER
      - name: PHP-CS-Fixer
        run: |
          composer require friendsofphp/php-cs-fixer
          ./vendor/bin/php-cs-fixer fix --dry-run

      # PHP STAN
      - name: PHP Stan
        run: |
          composer require phpstan/phpstan
          composer require phpstan/extension-installer
          composer require phpstan/phpstan-symfony
          ./vendor/bin/phpstan analyse src --memory-limit 1G

      # Symfony Linters
      - name: Lint YAML files
        run: ./bin/console lint:yaml config --parse-tags
      - name: Lint Twig templates
        run: ./bin/console lint:twig templates --env=prod
      - name: Lint Parameters and Services
        run: ./bin/console lint:container --no-debug
      - name: Lint Doctrine entities
        run: ./bin/console doctrine:schema:validate --skip-sync -vvv --no-interaction

      # PHP Unit
      - name: PHP Unit
        run: ./vendor/bin/phpunit
